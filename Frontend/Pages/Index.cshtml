@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
    string? userName = HttpContext.Session.GetString("UserName");
    //string? username = HttpContext.Session.GetString("UserName");

}

<div class="index-body-container">
    <div class="row">
        <div class="login">
        </div>
        <div class="your-cards-col col-md-3">
            <h4>Your cards</h4>
            <ul class="owned-cards-list">
                @if (!string.IsNullOrEmpty(userName))
                {
                    @foreach (var card in Model.OwnedCards)
                    {
                        <li>@card</li>
                    }
                }
            </ul>
        </div>
        <div class="col-md-9 text-center">
            @if (!string.IsNullOrEmpty(userName))
            {
                <h2>Hi @Model.UserName, Select your cards</h2>
            }
            else
            {
                <h2>Select your cards</h2>
            }
            <div class="card-selection">
                <form>
                    <label for="itemDropdown">Set: </label>
                    <select id="itemDropdown" onchange="handleDropdownSelection()">
                        <option value="Select set">Select set</option>

                        @if (Model.Sets != null && Model.Sets.Any())
                        {
                            @foreach (var setname in Model.Sets)
                            {
                                <option value="@setname.Name" key="@setname.Code">@setname.Name</option>
                            }
                        }
                    </select>
                </form>
            </div>
            <div class="cards-displayed card-container">
                @foreach (var card in Model.Cards)
                {
                    <div class="card" key="@card.Id">
                        <img src="@card.ImageUrl" alt="@card.Name" />
                        <p class="card-text">@card.Name</p>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<style>
    .index-body-container {
        padding-top: 40px;
        padding-bottom: 40px;
    }

    .owned-cards-list {
        list-style: none;
        padding-left: 2px;
        padding-right: 0;
    }

    .your-cards-col {}

    .card-container {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        align-items: center;
    }

    .card {
        max-width: min-content;
        padding: 1rem;
        background-color: inherit;
        border: none;
    }

    img {
        border-radius: 12px;
    }

    .card-text {
        font-size: 1rem;
    }
</style>

<script>

    function handleDropdownSelection() {
        var selectedSet = document.getElementById("itemDropdown");
        var selectedKey = selectedSet.options[selectedSet.selectedIndex].getAttribute("key");

        console.log("Selected key: " + selectedKey);
        var url = "https://api.magicthegathering.io/v1/cards?set=";
        fetch(url + selectedKey)
            .then(response => response.json())
            .then(data => {
                // Generate HTML for cards
                var cardHTML = '';
                data.cards.forEach(function (card) {
                    cardHTML += '<div class="card" key="' + card.id + '">';
                    cardHTML += '<img src="' + card.imageUrl + '" alt="' + card.name + '" />';
                    cardHTML += '<p class="card-text">' + card.name + '</p>';
                    cardHTML += '</div>';
                });
                $(".cards-displayed").html(cardHTML);
            });
    }
</script>

@* function handleDropdownSelection() {
var selectedSet = document.getElementById("itemDropdown");
var selectedKey = selectedSet.options[selectedSet.selectedIndex].getAttribute("key");

console.log("Selected key: " + selectedKey);
var url = "https://api.magicthegathering.io/v1/cards?set=";
fetch(url + selectedKey)
.then(response => response.text())
.then(data => {
console.log(data);

// Generate HTML for cards
var cardHTML = '';
data.cards.forEach(function (card) {
cardHTML += '<div class="card" key="' + card.id + '">';
cardHTML += '<img src="' + card.imageUrl + '" alt="' + card.name + '" />';
cardHTML += '<p class="card-text">' + card.name + '</p>';
cardHTML += '</div>';
});

console.log(cardHTML);
$(".cards-displayed").html(cardHTML);
});
} *@

@*
//console.log("Selected key: " + selectedKey);
//@Model.CurrSetCode = selectedKey;
//console.log("Model.CurrSetCode: " + @Model.CurrSetCode);
*@

@* $(this).children("option:selected").val();
$.ajax({
type: "GET",
url: "/Home/GetCards",
data: { setName: selectedSet },
success: function (data) {
$(".cards-displayed").html(data);
}
});
}
*@

@* $(document).ready(function () {
$("#itemDropdown").change(function () {
var selectedSet = $(this).children("option:selected").val();
$.ajax({
type: "GET",
url: "/Home/GetCards",
data: { setName: selectedSet },
success: function (data) {
$(".cards-displayed").html(data);
}
});
});
}); *@